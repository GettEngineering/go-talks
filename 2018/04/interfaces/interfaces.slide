Do it Go way Do it Gett way
How to use interfaces in Go
14:51 06 Apr 2018
Tags: golang, interface

Konstantin Ryabov
Backend Engineer, Gett RnD
ryabov@gett.com
http://gett.com/
@thekostya

* Don't do like this

.background images/background.png

If you want to present that type Dog implements AnimalInterface
.code 1/interfaces1.go /CODE1 BEGIN/,/CODE1 END/

.code 1/interfaces1.go /CODE2 BEGIN/,/CODE2 END/

* It doesn't work as you expect

.play 2/interfaces2.go

* But we describe that Dog contains Say()

.code -numbers 3/interfaces3.go

* And it compiles without errors

.background images/background.png

.code 1/interfaces1.go /CODE3 BEGIN/,/CODE3 END/

But we can't it run

.code 1/interfaces1.go /CODE4 BEGIN/,/CODE4 END/

* Hmm... But Why golang developers let us do it?

.background images/background.png

* We have sort.Interface

.background images/background.png

.code 1/interfaces1.go /CODE5 BEGIN/,/CODE5 END/

And we have IntSlice implements sort.Interface

.code 1/interfaces1.go /CODE5.1 BEGIN/,/CODE5.1 END/

.caption Example from [[https://stackoverflow.com/a/24537977][https://stackoverflow.com/a/24537977]] by @fabrizioM

* We would like to create "reverse" opposite to "sort"

.background images/background.png

.code 1/interfaces1.go /CODE6 BEGIN/,/CODE6 END/

Now we have the struct with the same interface but one method was redefined to opposite logic

* We can use it as sort.Interface with opposite logic

.background images/background.png

.code 1/interfaces1.go /CODE7 BEGIN/,/CODE7 END/


